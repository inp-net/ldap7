image: docker:latest
services:
    - docker:dind
variables:
    # When using dind service, you must instruct Docker to talk with
    # the daemon started inside of the service. The daemon is available
    # with a network connection instead of the default
    # /var/run/docker.sock socket.
    DOCKER_HOST: tcp://docker:2376
    #
    # The 'docker' hostname is the alias of the service container as described at
    # https://docs.gitlab.com/ee/ci/services/#accessing-the-services.
    # If you're using GitLab Runner 12.7 or earlier with the Kubernetes executor and Kubernetes 1.6 or earlier,
    # the variable must be set to tcp://localhost:2376 because of how the
    # Kubernetes executor connects services to the job container
    # DOCKER_HOST: tcp://localhost:2376
    #
    # Specify to Docker where to create the certificates. Docker
    # creates them automatically on boot, and creates
    # `/certs/client` to share between the service and job
    # container, thanks to volume mount from config.toml
    DOCKER_TLS_CERTDIR: "/certs"
    # These are usually specified by the entrypoint, however the
    # Kubernetes executor doesn't run entrypoints
    # https://gitlab.com/gitlab-org/gitlab-runner/-/issues/4125
    DOCKER_TLS_VERIFY: 1
    DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"

    GIT_SUBMODULE_STRATEGY: recursive
    GIT_SUBMODULE_FORCE_HTTPS: "true"

before_script:
    - until docker info; do sleep 1; done # ugly fix see https://gitlab.com/gitlab-org/gitlab-runner/-/issues/27384

test:
    stage: test
    script:
        - apk add --no-cache go nodejs npm
        - go install github.com/tsaarni/certyaml/cmd/certyaml@v0.9.2
        - ~/go/bin/certyaml -d tests/certs tests/certs/certs.yaml
        - docker compose up -d
        - npm install -g corepack
        - corepack enable
        - yarn install
        - yarn test
